) +
labs(x = "sec", y = "mV") +
theme_bw()
#Plot mV vs rumore di fondo
ggplot(data, aes(x = Time)) +
geom_line(aes(y = channel1_raw), color = "grey") +
geom_line(aes(y = channel2_raw), color = "red") +
geom_line(aes(y = channel3_raw), color = "blue") +
geom_line(aes(y = channel4_raw), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "mV") +
labs(x = "sec", y = "mV") +
theme_bw()
# Media mobile dati grezzi
data$channel1_raw <- rollmean(data$Dev2_ai0, k = 90, fill = NA, align = "right")
data$channel2_raw <- rollmean(data$Dev2_ai1, k = 90, fill = NA, align = "right")
data$channel3_raw <- rollmean(data$Dev2_ai2, k = 90, fill = NA, align = "right")
data$channel4_raw <- rollmean(data$Dev2_ai3, k = 90, fill = NA, align = "right")
# Media mobile dati puliti
data$channel2_ma <- rollmean(data$channel2, k = 90, fill = NA, align = "right")
data$channel3_ma <- rollmean(data$channel3, k = 90, fill = NA, align = "right")
data$channel4_ma <- rollmean(data$channel4, k = 90, fill = NA, align = "right")
# Convert Time column to numeric
data$Time <- as.numeric(sub(" sec", "", data$Time))
scaling_factor <- 3e-05
#Plot mV vs rumore di fondo
ggplot(data, aes(x = Time)) +
geom_line(aes(y = channel1_raw), color = "grey") +
geom_line(aes(y = channel2_raw), color = "red") +
geom_line(aes(y = channel3_raw), color = "blue") +
geom_line(aes(y = channel4_raw), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "mV") +
labs(x = "sec", y = "mV") +
theme_bw()
# Carica pacchetti
library(ggplot2)
library(zoo)
library(readxl)
# Carica dataset
data <- read.csv("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness_13.csv")
temp <- read_excel("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness.xlsx",
sheet = "17_12.1")
# Media mobile dati grezzi
data$channel1_raw <- rollmean(data$Dev2_ai0, k = 90, fill = NA, align = "right")
data$channel2_raw <- rollmean(data$Dev2_ai1, k = 90, fill = NA, align = "right")
data$channel3_raw <- rollmean(data$Dev2_ai2, k = 90, fill = NA, align = "right")
data$channel4_raw <- rollmean(data$Dev2_ai3, k = 90, fill = NA, align = "right")
# Pulizia segnale da rumore di fondo
data$channel1 <- data$Dev2_ai0
data$channel2 <- data$Dev2_ai1 - data$Dev2_ai0
data$channel3 <- data$Dev2_ai2 - data$Dev2_ai0
data$channel4 <- data$Dev2_ai3 - data$Dev2_ai0
# Media mobile dati puliti
data$channel2_ma <- rollmean(data$channel2, k = 90, fill = NA, align = "right")
data$channel3_ma <- rollmean(data$channel3, k = 90, fill = NA, align = "right")
data$channel4_ma <- rollmean(data$channel4, k = 90, fill = NA, align = "right")
# Convert Time column to numeric
data$Time <- as.numeric(sub(" sec", "", data$Time))
scaling_factor <- 3e-05
#Plot mV vs rumore di fondo
ggplot(data, aes(x = Time)) +
geom_line(aes(y = channel1_raw), color = "grey") +
geom_line(aes(y = channel2_raw), color = "red") +
geom_line(aes(y = channel3_raw), color = "blue") +
geom_line(aes(y = channel4_raw), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "mV") +
labs(x = "sec", y = "mV") +
theme_bw()
# Plot mv canali puliti
ggplot(data, aes(x = Time)) +
geom_line(aes(y =  channel2_ma), color = "red") +
geom_line(aes(y =  channel3_ma), color = "blue") +
geom_line(aes(y =  channel4_ma), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Carica pacchetti
library(ggplot2)
library(zoo)
library(readxl)
# Carica dataset
data <- read.csv("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness_13.csv")
temp <- read_excel("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness.xlsx",
sheet = "17_12.1")
# Media mobile dati grezzi
data$channel1_raw <- rollmean(data$Dev2_ai0, k = 30, fill = NA, align = "right")
data$channel2_raw <- rollmean(data$Dev2_ai1, k = 30, fill = NA, align = "right")
data$channel3_raw <- rollmean(data$Dev2_ai2, k = 30, fill = NA, align = "right")
data$channel4_raw <- rollmean(data$Dev2_ai3, k = 30, fill = NA, align = "right")
# Pulizia segnale da rumore di fondo
data$channel1 <- data$Dev2_ai0
data$channel2 <- data$Dev2_ai1 - data$Dev2_ai0
data$channel3 <- data$Dev2_ai2 - data$Dev2_ai0
data$channel4 <- data$Dev2_ai3 - data$Dev2_ai0
# Media mobile dati puliti
data$channel2_ma <- rollmean(data$channel2, k = 90, fill = NA, align = "right")
data$channel3_ma <- rollmean(data$channel3, k = 90, fill = NA, align = "right")
data$channel4_ma <- rollmean(data$channel4, k = 90, fill = NA, align = "right")
# Convert Time column to numeric
data$Time <- as.numeric(sub(" sec", "", data$Time))
scaling_factor <- 3e-05
#Plot mV vs rumore di fondo
ggplot(data, aes(x = Time)) +
geom_line(aes(y = channel1_raw), color = "grey") +
geom_line(aes(y = channel2_raw), color = "red") +
geom_line(aes(y = channel3_raw), color = "blue") +
geom_line(aes(y = channel4_raw), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "mV") +
labs(x = "sec", y = "mV") +
theme_bw()
# Plot mv canali puliti
ggplot(data, aes(x = Time)) +
geom_line(aes(y =  channel2_ma), color = "red") +
geom_line(aes(y =  channel3_ma), color = "blue") +
geom_line(aes(y =  channel4_ma), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
#Plot mV vs rumore di fondo
ggplot(data, aes(x = Time)) +
geom_line(aes(y = channel1_raw), color = "grey") +
geom_line(aes(y = channel2_raw), color = "red") +
geom_line(aes(y = channel3_raw), color = "blue") +
geom_line(aes(y = channel4_raw), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Plot mv canali puliti
ggplot(data, aes(x = Time)) +
geom_line(aes(y =  channel2_ma), color = "red") +
geom_line(aes(y =  channel3_ma), color = "blue") +
geom_line(aes(y =  channel4_ma), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Carica pacchetti
library(ggplot2)
library(zoo)
library(readxl)
# Carica dataset
data <- read.csv("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness_13.csv")
temp <- read_excel("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness.xlsx",
sheet = "17_12.1")
# Media mobile dati grezzi
data$channel1_raw <- rollmean(data$Dev2_ai0, k = 30, fill = NA, align = "right")
data$channel2_raw <- rollmean(data$Dev2_ai1, k = 30, fill = NA, align = "right")
data$channel3_raw <- rollmean(data$Dev2_ai2, k = 30, fill = NA, align = "right")
data$channel4_raw <- rollmean(data$Dev2_ai3, k = 30, fill = NA, align = "right")
# Pulizia segnale da rumore di fondo
data$channel1 <- data$Dev2_ai0
data$channel2 <- data$Dev2_ai1 - data$Dev2_ai0
data$channel3 <- data$Dev2_ai2 - data$Dev2_ai0
data$channel4 <- data$Dev2_ai3 - data$Dev2_ai0
# Media mobile dati puliti
data$channel2_ma <- rollmean(data$channel2, k = 30, fill = NA, align = "right")
data$channel3_ma <- rollmean(data$channel3, k = 30, fill = NA, align = "right")
data$channel4_ma <- rollmean(data$channel4, k = 30, fill = NA, align = "right")
# Convert Time column to numeric
data$Time <- as.numeric(sub(" sec", "", data$Time))
scaling_factor <- 3e-05
#Plot mV vs rumore di fondo
ggplot(data, aes(x = Time)) +
geom_line(aes(y = channel1_raw), color = "grey") +
geom_line(aes(y = channel2_raw), color = "red") +
geom_line(aes(y = channel3_raw), color = "blue") +
geom_line(aes(y = channel4_raw), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Plot mv canali puliti
ggplot(data, aes(x = Time)) +
geom_line(aes(y =  channel2_ma), color = "red") +
geom_line(aes(y =  channel3_ma), color = "blue") +
geom_line(aes(y =  channel4_ma), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Carica pacchetti
library(ggplot2)
library(zoo)
library(readxl)
# Carica dataset
data <- read.csv("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness_14.csv")
temp <- read_excel("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness.xlsx",
sheet = "17_12.2")
# Media mobile dati grezzi
data$channel1_raw <- rollmean(data$Dev2_ai0, k = 30, fill = NA, align = "right")
data$channel2_raw <- rollmean(data$Dev2_ai1, k = 30, fill = NA, align = "right")
data$channel3_raw <- rollmean(data$Dev2_ai2, k = 30, fill = NA, align = "right")
data$channel4_raw <- rollmean(data$Dev2_ai3, k = 30, fill = NA, align = "right")
# Pulizia segnale da rumore di fondo
data$channel1 <- data$Dev2_ai0
data$channel2 <- data$Dev2_ai1 - data$Dev2_ai0
data$channel3 <- data$Dev2_ai2 - data$Dev2_ai0
data$channel4 <- data$Dev2_ai3 - data$Dev2_ai0
# Media mobile dati puliti
data$channel2_ma <- rollmean(data$channel2, k = 30, fill = NA, align = "right")
data$channel3_ma <- rollmean(data$channel3, k = 30, fill = NA, align = "right")
data$channel4_ma <- rollmean(data$channel4, k = 30, fill = NA, align = "right")
# Convert Time column to numeric
data$Time <- as.numeric(sub(" sec", "", data$Time))
scaling_factor <- 3e-05
#Plot mV vs rumore di fondo
ggplot(data, aes(x = Time)) +
geom_line(aes(y = channel1_raw), color = "grey") +
geom_line(aes(y = channel2_raw), color = "red") +
geom_line(aes(y = channel3_raw), color = "blue") +
geom_line(aes(y = channel4_raw), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Plot mv canali puliti
ggplot(data, aes(x = Time)) +
geom_line(aes(y =  channel2_ma), color = "red") +
geom_line(aes(y =  channel3_ma), color = "blue") +
geom_line(aes(y =  channel4_ma), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
library(distill)
setwd("~/Documents/my_website")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/Documents/my_website")
rmarkdown::render_site()
create_theme(name = "theme")
library(distill)
create_theme(name = "theme")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
# Carica pacchetti
library(ggplot2)
library(zoo)
library(readxl)
# Carica dataset
data <- read.csv("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness_15.csv")
temp <- read_excel("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness.xlsx",
sheet = "17_12.1")
# Media mobile dati grezzi
data$channel1_raw <- rollmean(data$Dev2_ai0, k = 30, fill = NA, align = "right")
data$channel2_raw <- rollmean(data$Dev2_ai1, k = 30, fill = NA, align = "right")
data$channel3_raw <- rollmean(data$Dev2_ai2, k = 30, fill = NA, align = "right")
data$channel4_raw <- rollmean(data$Dev2_ai3, k = 30, fill = NA, align = "right")
# Pulizia segnale da rumore di fondo
data$channel1 <- data$Dev2_ai0
data$channel2 <- data$Dev2_ai1 - data$Dev2_ai0
data$channel3 <- data$Dev2_ai2 - data$Dev2_ai0
data$channel4 <- data$Dev2_ai3 - data$Dev2_ai0
# Media mobile dati puliti
data$channel2_ma <- rollmean(data$channel2, k = 30, fill = NA, align = "right")
data$channel3_ma <- rollmean(data$channel3, k = 30, fill = NA, align = "right")
data$channel4_ma <- rollmean(data$channel4, k = 30, fill = NA, align = "right")
# Convert Time column to numeric
data$Time <- as.numeric(sub(" sec", "", data$Time))
scaling_factor <- 3e-05
#Plot mV vs rumore di fondo
ggplot(data, aes(x = Time)) +
geom_line(aes(y = channel1_raw), color = "grey") +
geom_line(aes(y = channel2_raw), color = "red") +
geom_line(aes(y = channel3_raw), color = "blue") +
geom_line(aes(y = channel4_raw), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Carica pacchetti
library(ggplot2)
library(zoo)
library(readxl)
# Carica dataset
data <- read.csv("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness_15.csv")
temp <- read_excel("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness.xlsx",
sheet = "8_01")
# Media mobile dati grezzi
data$channel1_raw <- rollmean(data$Dev2_ai0, k = 30, fill = NA, align = "right")
data$channel2_raw <- rollmean(data$Dev2_ai1, k = 30, fill = NA, align = "right")
data$channel3_raw <- rollmean(data$Dev2_ai2, k = 30, fill = NA, align = "right")
data$channel4_raw <- rollmean(data$Dev2_ai3, k = 30, fill = NA, align = "right")
# Pulizia segnale da rumore di fondo
data$channel1 <- data$Dev2_ai0
data$channel2 <- data$Dev2_ai1 - data$Dev2_ai0
data$channel3 <- data$Dev2_ai2 - data$Dev2_ai0
data$channel4 <- data$Dev2_ai3 - data$Dev2_ai0
# Media mobile dati puliti
data$channel2_ma <- rollmean(data$channel2, k = 30, fill = NA, align = "right")
data$channel3_ma <- rollmean(data$channel3, k = 30, fill = NA, align = "right")
data$channel4_ma <- rollmean(data$channel4, k = 30, fill = NA, align = "right")
# Convert Time column to numeric
data$Time <- as.numeric(sub(" sec", "", data$Time))
scaling_factor <- 3e-05
#Plot mV vs rumore di fondo
ggplot(data, aes(x = Time)) +
geom_line(aes(y = channel1_raw), color = "grey") +
geom_line(aes(y = channel2_raw), color = "red") +
geom_line(aes(y = channel3_raw), color = "blue") +
geom_line(aes(y = channel4_raw), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Plot mv canali puliti
ggplot(data, aes(x = Time)) +
geom_line(aes(y =  channel2_ma), color = "red") +
geom_line(aes(y =  channel3_ma), color = "blue") +
geom_line(aes(y =  channel4_ma), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Carica pacchetti
library(ggplot2)
library(zoo)
library(readxl)
# Carica dataset
data <- read.csv("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness_15.csv")
temp <- read_excel("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness.xlsx",
sheet = "8_01")
# Media mobile dati grezzi
data$channel1_raw <- rollmean(data$Dev2_ai0, k = 90, fill = NA, align = "right")
data$channel2_raw <- rollmean(data$Dev2_ai1, k = 90, fill = NA, align = "right")
data$channel3_raw <- rollmean(data$Dev2_ai2, k = 90, fill = NA, align = "right")
data$channel4_raw <- rollmean(data$Dev2_ai3, k = 90, fill = NA, align = "right")
# Pulizia segnale da rumore di fondo
data$channel1 <- data$Dev2_ai0
data$channel2 <- data$Dev2_ai1 - data$Dev2_ai0
data$channel3 <- data$Dev2_ai2 - data$Dev2_ai0
data$channel4 <- data$Dev2_ai3 - data$Dev2_ai0
# Media mobile dati puliti
data$channel2_ma <- rollmean(data$channel2, k = 30, fill = NA, align = "right")
data$channel3_ma <- rollmean(data$channel3, k = 30, fill = NA, align = "right")
data$channel4_ma <- rollmean(data$channel4, k = 30, fill = NA, align = "right")
# Convert Time column to numeric
data$Time <- as.numeric(sub(" sec", "", data$Time))
scaling_factor <- 3e-05
#Plot mV vs rumore di fondo
ggplot(data, aes(x = Time)) +
geom_line(aes(y = channel1_raw), color = "grey") +
geom_line(aes(y = channel2_raw), color = "red") +
geom_line(aes(y = channel3_raw), color = "blue") +
geom_line(aes(y = channel4_raw), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Plot mv canali puliti
ggplot(data, aes(x = Time)) +
geom_line(aes(y =  channel2_ma), color = "red") +
geom_line(aes(y =  channel3_ma), color = "blue") +
geom_line(aes(y =  channel4_ma), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Carica pacchetti
library(ggplot2)
library(zoo)
library(readxl)
# Carica dataset
data <- read.csv("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness_15.csv")
temp <- read_excel("/Users/ase/Documents/Grapevine/datasets/bud_cycle/cold_hardiness/cold_hardiness.xlsx",
sheet = "8_01")
# Media mobile dati grezzi
data$channel1_raw <- rollmean(data$Dev2_ai0, k = 60, fill = NA, align = "right")
data$channel2_raw <- rollmean(data$Dev2_ai1, k = 60, fill = NA, align = "right")
data$channel3_raw <- rollmean(data$Dev2_ai2, k = 60, fill = NA, align = "right")
data$channel4_raw <- rollmean(data$Dev2_ai3, k = 60, fill = NA, align = "right")
# Pulizia segnale da rumore di fondo
data$channel1 <- data$Dev2_ai0
data$channel2 <- data$Dev2_ai1 - data$Dev2_ai0
data$channel3 <- data$Dev2_ai2 - data$Dev2_ai0
data$channel4 <- data$Dev2_ai3 - data$Dev2_ai0
# Media mobile dati puliti
data$channel2_ma <- rollmean(data$channel2, k = 30, fill = NA, align = "right")
data$channel3_ma <- rollmean(data$channel3, k = 30, fill = NA, align = "right")
data$channel4_ma <- rollmean(data$channel4, k = 30, fill = NA, align = "right")
# Convert Time column to numeric
data$Time <- as.numeric(sub(" sec", "", data$Time))
scaling_factor <- 3e-05
#Plot mV vs rumore di fondo
ggplot(data, aes(x = Time)) +
geom_line(aes(y = channel1_raw), color = "grey") +
geom_line(aes(y = channel2_raw), color = "red") +
geom_line(aes(y = channel3_raw), color = "blue") +
geom_line(aes(y = channel4_raw), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
# Plot mv canali puliti
ggplot(data, aes(x = Time)) +
geom_line(aes(y =  channel2_ma), color = "red") +
geom_line(aes(y =  channel3_ma), color = "blue") +
geom_line(aes(y =  channel4_ma), color = "green") +
geom_line(data = temp, aes(x = t_log, y = T_log * scaling_factor), color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(min(data$Time), max(data$Time), by = 1800)) +
scale_y_continuous(name = "Signal (mV)",
sec.axis = sec_axis(~ . / scaling_factor, name = "Temperature (°C)",
breaks = seq(min(temp$T_log, na.rm = TRUE), max(temp$T_log, na.rm = TRUE), by = 5))
) +
labs(x = "sec", y = "mV") +
theme_bw()
setwd("~/Documents/my_website")
rmarkdown::render_site()
setwd("~/Documents/Tanzania/my_website")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
